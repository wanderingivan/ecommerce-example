<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xmlns:sec="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	   		http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
			http://www.springframework.org/schema/security 
			http://www.springframework.org/schema/security/spring-security.xsd">
			
	<sec:global-method-security pre-post-annotations="enabled">
		<sec:expression-handler ref="expressionHandler"/>
	</sec:global-method-security>
	
	<!-- Expression handler setup -->	
	<bean id="expressionHandler" 
				class="org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler">
	  <property name="permissionEvaluator" ref="permissionEvaluator"/>
	</bean> 
			
	<!-- A customized PermissionEvaluator that evaluates permissions via the ACL module -->
	<bean class="org.springframework.security.acls.AclPermissionEvaluator" id="permissionEvaluator">
		<constructor-arg ref="aclService"/>
	</bean>
	
	<!-- Mutable Acl service  NOTE this one is not configured to enter missing sids!-->
	<bean class="org.springframework.security.acls.jdbc.JdbcMutableAclService" id="aclService">
		<constructor-arg ref="dataSource"/>
        <constructor-arg ref="lookupStrategy"/>
        <constructor-arg ref="aclCache"/>
        <property name="classIdentityQuery" value="SELECT @@IDENTITY"/><!-- This works only for MYSQL different DB will have different values -->
		<property name="sidIdentityQuery" value="SELECT @@IDENTITY"/>	
	</bean>
	
	<!-- A lookup strategy for optimizing database queries -->
	<bean id="lookupStrategy" class="org.springframework.security.acls.jdbc.BasicLookupStrategy">
        <constructor-arg ref="dataSource"/>
        <constructor-arg ref="aclCache"/>
        <constructor-arg ref="aclAuthorizationStrategy"/>
        <constructor-arg ref="auditLogger"/>
    </bean>
	
	<!-- An ACL cache to minimize calls to the ACL database -->   
 
  	<bean id="aclCache" class="org.springframework.security.acls.domain.EhCacheBasedAclCache">
        <constructor-arg ref="factoryBean"/>
        <constructor-arg ref="permissionStrategy"/>
        <constructor-arg ref="aclAuthorizationStrategy"/>
    </bean>
    
     <bean id="factoryBean" class="org.springframework.cache.ehcache.EhCacheFactoryBean">
    		<property name="cacheManager" ref="ehCache"/>
    		<property name="cacheName" value="aclCache"/>
    </bean>
    
    <!-- Springs default permission strategy -->
    <bean id="permissionStrategy" class="org.springframework.security.acls.domain.DefaultPermissionGrantingStrategy">
    	<constructor-arg ref="auditLogger"/>
    </bean>
	
	    <!-- An ACL authorization strategy to determine whether a principal is permitted to call administrative methods -->
    <bean id="aclAuthorizationStrategy" class="org.springframework.security.acls.domain.AclAuthorizationStrategyImpl">
        <constructor-arg>
            <list>
                <bean class="org.springframework.security.core.authority.SimpleGrantedAuthority">
                    <constructor-arg value="ROLE_ANONYMOUS"/>
                </bean>
                <bean class="org.springframework.security.core.authority.SimpleGrantedAuthority">
                    <constructor-arg value="ROLE_ANONYMOUS"/>
                </bean>
                <bean class="org.springframework.security.core.authority.SimpleGrantedAuthority">
                    <constructor-arg value="ROLE_ANONYMOUS"/>
                </bean>
            </list>
        </constructor-arg>
    </bean>
    
    	<!-- An audit logger used to log audit events -->
    <bean id="auditLogger" class="org.springframework.security.acls.domain.ConsoleAuditLogger"/>
	<!--  Role hierarchy: each user gets all permissions for users with below level roles -->
	<bean id="roleHierarchy"  class="org.springframework.security.access.hierarchicalroles.RoleHierarchyImpl">
	    <property name="hierarchy">
	        <value>
	            ROLE_ADMIN > ROLE_USER
	            ROLE_USER > ROLE_VISITOR
	        </value>
	    </property>
	</bean>
</beans>